/*
 * System rezerwacji miejsc na eventy
 *
 * Niniejsza dokumentacja stanowi opis REST API implemtowanego przez serwer centralny. Endpointy 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: XXX@pw.edu.pl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.ComponentModel.DataAnnotations;
using biletmajster_backend.Attributes;
using biletmajster_backend.Domain.DTOS;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.AspNetCore.Annotations;

namespace biletmajster_backend.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CategoriesApiController : ControllerBase
    { 
        /// <summary>
        /// Create new category
        /// </summary>
        /// <param name="categoryName">name of category</param>
        /// <response code="201">created</response>
        /// <response code="400">category already exist</response>
        [HttpPost]
        [Route("/api/v3/categories")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("AddCategories")]
        [SwaggerResponse(statusCode: 201, type: typeof(Category), description: "created")]
        public virtual IActionResult AddCategories([FromQuery][Required()]string categoryName)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Category));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"Sport\",\n  \"id\" : 1\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Category>(exampleJson)
                        : default(Category);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Return list of all categories
        /// </summary>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/v3/categories")]
        [ValidateModelState]
        [SwaggerOperation("GetCategories")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Category>), description: "successful operation")]
        public virtual IActionResult GetCategories()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Category>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"name\" : \"Sport\",\n  \"id\" : 1\n}, {\n  \"name\" : \"Sport\",\n  \"id\" : 1\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Category>>(exampleJson)
                        : default(List<Category>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
